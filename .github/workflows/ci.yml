# NOTE: jobs in this workflow are required checks (see https://github.com/conda/conda/settings/branch_protection_rules/773550)
# remember to mirror changes here in ci-skip.yml to circumvent skipped required checks issue
# https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks#handling-skipped-but-required-checks
name: CI tests

on:
  # NOTE: github.event context is push payload:
  # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'

  # NOTE: github.event context is pull_request payload:
  # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
  pull_request:
    paths-ignore:
      - 'docs/**'

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        conda-subdir: ['win-64']
        test-type: ['unit', 'integration']
        test-group: ['1', '2', '3']
    env:
      OS: Windows
      PYTHON: ${{ matrix.python-version }}
      CONDA_SUBDIR: ${{ matrix.conda-subdir }}
      TEST_SPLITS: 3
      TEST_GROUP: ${{ matrix.test-group }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set temp dirs correctly
        # https://github.com/actions/virtual-environments/issues/712
        run: |
          echo "TMPDIR=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV

      - name: Setup environment
        shell: cmd
        run: |
          call .\dev\windows\setup.bat

      - name: Python ${{ matrix.python-version }}, ${{ matrix.conda-subdir }} ${{ matrix.test-type }} tests, group ${{ matrix.test-group }}
        shell: cmd
        run: |
          call .\dev\windows\${{ matrix.test-type }}.bat

      - uses: codecov/codecov-action@v2
        with:
          flags: ${{ matrix.test-type }}
          env_vars: OS,PYTHON

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          # name has to be unique, to not overwrite uploads of other matrix runs. sha1 is optional and only to differentiate
          # when locally dowloading and comparing results of different workflow runs.
          name: test-results-${{ github.sha }}-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.conda-subdir }}-${{ matrix.test-type }}-${{ matrix.test-group }}
          path: |
            .coverage
            test-report.xml
          retention-days: 1

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        test-type: ['unit', 'integration']
        test-group: ['1', '2', '3']
    env:
      OS: Linux
      PYTHON: ${{ matrix.python-version }}
      TEST_SPLITS: 3
      TEST_GROUP: ${{ matrix.test-group }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Python ${{ matrix.python-version }} ${{ matrix.test_type }} tests, group ${{ matrix.test-group }}
        run: >
          docker run
          --rm -v ${PWD}:/opt/conda-src
          -e TEST_SPLITS
          -e TEST_GROUP
          ghcr.io/conda/conda-ci:master-linux-python${{ matrix.python-version }}
          /opt/conda-src/dev/linux/${{ matrix.test-type }}.sh

      - uses: codecov/codecov-action@v2
        with:
          flags: ${{ matrix.test-type }}
          env_vars: OS,PYTHON

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          # name has to be unique, to not overwrite uploads of other matrix runs. sha1 is optional and only to differentiate
          # when locally dowloading and comparing results of different workflow runs.
          name: test-results-${{ github.sha }}-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.test-type }}-${{ matrix.test-group }}
          path: |
            .coverage
            test-report.xml
          retention-days: 1

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9']
        test-type: ['unit', 'integration']
        test-group: ['1', '2', '3']
    env:
      OS: macOS
      PYTHON: ${{ matrix.python-version }}
      TEST_SPLITS: 3
      TEST_GROUP: ${{ matrix.test-group }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - name: Cache conda
      #   uses: actions/cache@v2
      #   env:
      #     # Increase this value to reset cache if tests/requirements.txt has not changed
      #     CACHE_NUMBER: 0
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key:
      #       ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('tests/requirements.txt') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: conda-test-env
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Setup environment
        shell: bash -l {0}
        run: |
          # restoring the default for changeps1 to have parity with dev
          conda config --set changeps1 true
          # make sure the caching works correctly
          conda config --set use_only_tar_bz2 true
          # install all test requirements
          conda install --name conda-test-env --yes --file tests/requirements.txt
          conda update openssl ca-certificates certifi

      - name: Python ${{ matrix.python-version }} ${{ matrix.test-type }} tests, group ${{ matrix.test-group }}
        shell: bash -l {0}
        run : |
          ./dev/macos/${{ matrix.test-type }}.sh

      - uses: codecov/codecov-action@v2
        with:
          flags: ${{ matrix.test-type }}
          env_vars: OS,PYTHON

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          # name has to be unique, to not overwrite uploads of other matrix runs. sha1 is optional and only to differentiate
          # when locally dowloading and comparing results of different workflow runs.
          name: test-results-${{ github.sha }}-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.test-type }}-${{ matrix.test-group }}
          path: |
            .coverage
            test-report.xml
          retention-days: 1

  analyze:
    needs: [windows, linux, macos]
    name: Analyze test results
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download test results
        uses: actions/download-artifact@v3
      - name: Upload combined test results
        # provides one downloadable archive of all .coverage/test-report.xml files
        # of all matrix runs for further analysis.
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ github.sha }}-all
          path: test-results-${{ github.sha }}-*
          retention-days: 90  # default: 90
      - name: Test Summary
        uses: test-summary/action@v1
        with:
          paths: ./test-results-${{ github.sha }}-**/test-report*.xml
